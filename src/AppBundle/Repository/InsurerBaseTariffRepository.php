<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use AppBundle\Entity\Insurer;
use AppBundle\Entity\Calculator;
/**
 * BaseTariffRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InsurerBaseTariffRepository extends EntityRepository
{
    
    public function getBaseTariffForInsurer(Insurer $insurer, $categories){
        
        $categoriesCountQuery = $this->_em->createQueryBuilder()
                ->addSelect('COUNT(tc)')
                ->from('AppBundle:InsurerBaseTariffCategory','tc')
                ->andWhere('tc.baseTariff = b')
                ->getDQL();

        $qb = $this->createQueryBuilder('b');
        
            return  $qb
                ->join('b.tariffCategories' ,'t')
                ->andWhere('b.insurer = :insurer')
                ->andWhere('t.category IN (:categories)')
                ->groupBy('b.id')
                ->having("COUNT(b) = ($categoriesCountQuery)")
                ->orderBy('b.amount','DESC')
                ->setMaxResults(1)
                ->setParameters(array(
                    'insurer' => $insurer,
                    'categories' => $categories
                ))
                ->getQuery()
                ->getOneOrNullResult();
        
    }
    
    public function getBaseTariffsForUser(\Sonata\UserBundle\Model\User $user){
        
        $qb = $this->createQueryBuilder('t');
        $entities = $qb
                ->join('t.insurer', 'insurer')
                ->andWhere(
                        '( insurer.user = :user )'
                )
                ->setParameter('user', $user)
                ->getQuery()
                ->getResult();
        
        return $entities;
    }
}
